* {
  margin: 0;
}

html,
body {
  --grey: hsl(240, 9%, 89%);
  --black: hsl(240, 6%, 13%);

  height: 100%;
  background-color: lightsalmon;
  font-family: 'Roboto', sans-serif;
  -webkit-font-smoothing: antialiased;
  color: var(--grey);
}

body {
  display: grid;
  place-items: center;
}

main {
  background: url('img/background.svg') no-repeat center/cover;
  width: 100vw;
  height: 100vw;
  min-height: 812px;
}

.container {
  max-width: 250px;
  margin-right: auto;
  margin-left: auto;
  text-align: center;
}

.avatar {
  width: 10rem;
  margin: 11.5rem auto 0;

  position: relative;
}
/* position: absolute faz o elemento ser sobreposto na página inteira. o position relative na caixa acima dele (no caso, a avatar) limita o absolute a apenas essa caixa */
.avatar span {
  position: absolute;
  top: -15px;
  z-index: 1;
}
/* o > seleciona a imagem da camada mais baixa. porém, após aplicar o clip-path, a imagem voltou a ser uma camada acima. por isso, foi preciso aplicar o z-index: 1 no selo, para que ele voltasse a sobrepor a imagem */
.avatar > img {
  width: 10rem;
  height: 11.5rem;
  object-fit: cover;
  clip-path: polygon(50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%, 0 25%);
}

h1 {
  font-size: 1.5rem;
  margin-top: 1.5rem;
}

a {
  color: var(--grey);
  text-decoration: none;
  margin-top: 0.25rem;
  /* pra alinhar o centro do ícone do github com o texto */
  display: flex;
  gap: 0.75rem;
  justify-content: center;
  align-items: center;
}

p {
  margin-top: 2rem;
}

ul {
  margin-top: 4rem;
  list-style: none;
  padding: 0;
  /* deixa os itens alinhados e libera as propriedades gap e justify-content (text-align não funciona por ser elemento, não texto) */
  display: flex;
  /* gap: espaçamento entre itens */
  gap: 0.5rem;
  justify-content: center;
}
